import Head from "next/head";
import React, { useEffect, useState } from "react";
import { machineProduct } from "../../core/util/schemas";
import { GetByID } from "../../core/service/genaric";
import { useRouter } from "next/router";
import {
  Card,
  Space,
  Image,
  Button,
  Layout,
  Empty,
  Input,
  Pagination,
} from "antd";
import BuyModal from "../../components/modal/buy";
import { Title, Time, TimeContainer, Detail } from "./machine.style";
import moment from "moment";
const { Search } = Input;
const { Header, Content } = Layout;

export default function Index() {
  const router = useRouter();
  const id = router.query.id;
  const [data, setData] = useState([]);
  const [showData, setShowData] = useState({});
  const [buyModalVisible, setBuyModalVisible] = useState(false);
  const [realTime, setRealTime] = useState("");
  const [searchData, setSearchData] = useState([]);
  const [showList, setShowList] = useState([]);
  const [pagination, setPagination] = useState({
    perPage: 5,
    page: 1,
    total_page: 10,
  });

  const { Meta } = Card;

  useEffect(() => {
    setTimeout(() => {
      setRealTime(moment().format("hh:mm:ss A"));
    }, 1000);
  });

  useEffect(() => {
    router.query.id && getData();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [router.query.id]);

  function getData() {
    GetByID(machineProduct, id)
      .then((response) => {
        if (response.code === 200) {
          setData(response.data);
          filterData(1, response.data);
        } else {
          setData([]);
        }
      })
      .catch((err) => {
        setData([]);
      });
  }

  function handleBuyProduct(value) {
    setShowData(value);
    setBuyModalVisible(true);
  }

  function filterData(value, data) {
    const temp = [];
    const index = value - 1;
    for (
      let i = index * 5;
      i < (value * 5 > data.length ? data.length : value * 5);
      i++
    ) {
      temp.push(data[i]);
    }
    setShowList(temp);
    setPagination({
      perPage: 5,
      page: value,
      total: searchData.length ? searchData.length : data.length,
    });
  }

  function onSearch(e) {
    const result = data.filter(
      (value) =>
        value.product_name
          .toLowerCase()
          .indexOf(e.target.value.toLowerCase()) !== -1
    );

    setShowList(result);
    filterData(1, result);
    setSearchData(result);
    setPagination({ perPage: 5, page: 1, total: result.length });
  }

  function handlePaginationChange(e, list) {
    filterData(e, list);
  }

  return (
    <>
      <Head>
        <title>[WEB] Drink Vending Machine</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header
        style={{
          height: "100px",
          justifyContent: "space-between",
          display: "flex",
        }}
      >
        <Space align="baseline" style={{ marginTop: 15 }}>
          <Title>Drink Vending Machine</Title>
        </Space>
        <Time>
          <TimeContainer style={{ marginLeft: "-40px" }}>
            <TimeContainer style={{ fontSize: "22px", textAlign: "right" }}>
              {moment().format("dddd")}
            </TimeContainer>
            <TimeContainer style={{ marginTop: "-30px" }}>
              {moment().format("DD-MM-YYYY")}
            </TimeContainer>
          </TimeContainer>
          <TimeContainer>
            <TimeContainer
              style={{
                fontSize: "20px",
                marginLeft: "20px",
                marginRight: "-70px",
                borderLeft: "2px solid white",
                paddingLeft: 15,
              }}
            >
              {realTime || moment().format("hh:mm:ss A")}
            </TimeContainer>
          </TimeContainer>
        </Time>
      </Header>
      <Space align="baseline" style={{ marginTop: 15, marginLeft: 50 }}>
        <Title style={{ color: "black" }}>Product List</Title>
        <Search
          placeholder="Name"
          onChange={onSearch}
          style={{ width: 300, marginTop: -8, marginLeft: 10 }}
        />
      </Space>
      <Content style={{ padding: "30px" }}>
        <Space
          size="large"
          wrap
          style={{
            backgroundColor: "lightgray",
            width: "100%",
            padding: 40,
            borderRadius: 15,
          }}
        >
          {!showList?.length ? (
            <div
              style={{
                display: "flex",
                width: "96vw",
                // height: "100vh",
                justifyContent: "center",
              }}
            >
              <Empty />
            </div>
          ) : (
            showList.map((value, index) => {
              return (
                value.status !== "inactive" && (
                  <Card
                    key={index}
                    hoverable
                    style={{
                      width: 335,
                      maxHeight: 510,
                      textAlign: "center",
                      borderRadius: 15,
                      padding: 15,
                    }}
                    cover={
                      <Image
                        width={300}
                        height={300}
                        preview={false}
                        alt="example"
                        src={value.product_image}
                      />
                    }
                  >
                    <Meta
                      className="custom-ant-meta-description"
                      title={value.product_name}
                      description={
                        <div
                          style={{
                            overflow: "hidden",
                            textOverflow: "ellipsis",
                            display: "-webkit-box",
                            WebkitLineClamp: 2,
                            WebkitBoxOrient: "vertical",
                          }}
                        >
                          {value.product_detail}
                        </div>
                      }
                    />
                    <Button
                      disabled={value.product_amount > 0 ? false : true}
                      style={{ marginTop: "20px" }}
                      onClick={() => {
                        handleBuyProduct(value);
                      }}
                    >
                      {value.product_amount > 0
                        ? value.product_price + " THB."
                        : "Sold Out"}
                    </Button>
                    <Detail>Stock : {value.product_amount}</Detail>
                  </Card>
                )
              );
            })
          )}
        </Space>
        <div style={{ width: "100%", textAlign: "right", marginTop: 10 }}>
          <Pagination
            current={pagination.page}
            defaultCurrent={1}
            total={pagination.total}
            pageSize={pagination.perPage}
            style={{ marginTop: 20, textAlign: "right" }}
            onChange={(e) =>
              handlePaginationChange(e, searchData.length ? searchData : data)
            }
          />
        </div>
      </Content>
      <BuyModal
        visible={buyModalVisible}
        setVisible={setBuyModalVisible}
        data={showData}
        setData={setShowData}
        reloadData={getData}
      />
    </>
  );
}
